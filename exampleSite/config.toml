# hugo server --minify --themesDir ... --baseURL=http://0.0.0.0:1313/theme/hugo-book/

baseURL = 'https://example.com/hugo-book'
title = 'Hugo Book'
theme = 'hugo-book'

# Book configuration
disablePathToLower = true
enableGitInfo = true

# Needed for mermaid/katex shortcodes
[markup]
[markup.goldmark.renderer]
  unsafe = true

[markup.tableOfContents]
  startLevel = 1

# Multi-lingual mode config
# There are different options to translate files
# See https://gohugo.io/content-management/multilingual/#translation-by-filename
# And https://gohugo.io/content-management/multilingual/#translation-by-content-directory
[languages]
[languages.en]
  languageName = 'English'
  contentDir = 'content'
  weight = 1

[languages.ru]
  languageName = 'Russian'
  contentDir = 'content.ru'
  weight = 2

[languages.zh]
  languageName = 'Chinese'
  contentDir = 'content.zh'
  weight = 3

[menu]
# [[menu.before]]
[[menu.before]]
  name = "介绍"
  url = "https://github.com/airdb-wiki/hugo-book"
  weight = 10

[[menu.before]]
  name = "框架"
  url = "https://themes.gohugo.io/hugo-book/"
  weight = 21

[[menu.before]]
  name = "组件"
  url = "https://themes.gohugo.io/hugo-book/"
  weight = 22


[[menu.before]]
  name = "APIs"
  url = "https://themes.gohugo.io/hugo-book/"
  weight = 32

[[menu.before]]
  name = "其他规范"
  url = "https://themes.gohugo.io/hugo-book/"
  weight = 43

[[menu.after ]]
  name = "插件市场"
  url = "https://themes.gohugo.io/hugo-book/"
  weight = 10

[[menu.after ]]
  name = "需求墙"
  url = "https://github.com/airdb-wiki/hugo-book"
  weight = 20


[params]
  # (Optional, default true) Controls table of contents visibility on right side of pages.
  # Start and end levels can be controlled with markup.tableOfContents setting.
  # You can also specify this parameter per page in front matter.
  BookToC = true

  # (Optional, default none) Set the path to a logo for the book. If the logo is
  # /static/logo.png then the path would be logo.png
  # BookLogo = 'logo.png'

  # (Optional, default none) Set leaf bundle to render as side menu
  # When not specified file structure and weights will be used
  # BookMenuBundle = '/menu'

  # (Optional, default docs) Specify root page to render child pages as menu.
  # Page is resoled by .GetPage function: https://gohugo.io/functions/getpage/
  # For backward compatibility you can set '*' to render all sections to menu. Acts same as '/'
  BookSection = 'docs'

  # Set source repository location.
  # Used for 'Last Modified' and 'Edit this page' links.
  BookRepo = 'https://github.com/airdb-wiki/hugo-book'

  # Enable "Edit this page" links for 'doc' page type.
  # Disabled by default. Uncomment to enable. Requires 'BookRepo' param.
  # Edit path must point to root directory of repo.
  BookEditPath = 'edit/main/exampleSite'

  # Configure the date format used on the pages
  # - In git information
  # - In blog posts
  # BookDateFormat = 'January 2, 2006'
  # https://gohugo.io/functions/format/
  BookDateFormat = 'Mon Jan 2 15:04:05 MST 2006'

  # (Optional, default true) Enables search function with flexsearch,
  # Index is built on fly, therefore it might slowdown your website.
  # Configuration for indexing can be adjusted in i18n folder per language.
  BookSearch = true

  # (Optional, default true) Enables comments template on pages
  # By default partals/docs/comments.html includes Disqus template
  # See https://gohugo.io/content-management/comments/#configure-disqus
  # Can be overwritten by same param in page frontmatter
  BookComments = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables portable links and link checks in markdown pages.
  # Portable links meant to work with text editors and let you write markdown without {{< relref >}} shortcode
  # Theme will print warning if page referenced in markdown does not exists.
  BookPortableLinks = true

  # /!\ This is an experimental feature, might be removed or changed at any time
  # (Optional, experimental, default false) Enables service worker that caches visited pages and resources for offline use.
  BookServiceWorker = true
